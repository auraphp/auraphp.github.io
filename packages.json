{
    "5.x": {
        "Sql": {
            "type": "library",
            "version": "5.0.0",
            "github": "https://github.com/auraphp/Aura.Sql",
            "composer": "aura/sql",
            "description": "A PDO extension that provides lazy connections, array quoting, query profiling, value binding, and convenience methods for common fetch styles. Because it extends PDO, existing code that uses PDO can use this without any changes to the existing code."
        }
    },
    "4.x": {
        "Accept": {
            "type": "library",
            "version": "4.0.0",
            "github": "https://github.com/auraphp/Aura.Accept",
            "composer": "aura/accpet",
            "description": "Provides content-negotiation tools using `Accept*` headers."
        },
        "Di": {
            "type": "library",
            "version": "4.2.1",
            "github": "https://github.com/auraphp/Aura.Di",
            "composer": "aura/di",
            "description": "A serializable dependency injection container with constructor and setter injection, interface and trait awareness, configuration inheritance, and much more."
        },
        "Marshal": {
            "type": "library",
            "version": "4.0.0",
            "github": "https://github.com/auraphp/Aura.Marshal",
            "composer": "aura/sql",
            "description": "The Aura Marshal package is a data-object marshalling tool. It takes results from data sources and marshals those result sets into domain model objects of your own design, preserving data relationships along the way."
        },
        "Sql": {
            "type": "library",
            "version": "4.0.0",
            "github": "https://github.com/auraphp/Aura.Sql",
            "composer": "aura/sql",
            "description": "A PDO extension that provides lazy connections, array quoting, query profiling, value binding, and convenience methods for common fetch styles. Because it extends PDO, existing code that uses PDO can use this without any changes to the existing code."
        }
    },
    "3.x": {
        "Di": {
            "type": "library",
            "version": "3.4.0",
            "github": "https://github.com/auraphp/Aura.Di",
            "composer": "aura/di",
            "description": "A serializable dependency injection container with constructor and setter injection, interface and trait awareness, configuration inheritance, and much more."
        },
        "Filter_Interface": {
            "type": "interface",
            "version": "3.0.0-alpha1",
            "github": "https://github.com/auraphp/Aura.Filter_Interface",
            "composer": "aura/filter-interface",
            "description": "An interface package for validation and sanitizing library"
        },
        "Intl": {
            "type": "library",
            "version": "3.0.0",
            "github": "https://github.com/auraphp/Aura.Intl",
            "composer": "aura/intl",
            "description": "The Aura Intl package provides internationalization tools, specifically message translation."
        },
        "Payload": {
            "type": "library",
            "version": "3.0.1",
            "github": "https://github.com/auraphp/Aura.Payload",
            "composer": "aura/payload",
            "description": "A Domain Payload implementation."
        },
        "Payload_Interface": {
            "type": "interface",
            "version": "3.1.0",
            "github": "https://github.com/auraphp/Aura.Payload_Interface",
            "composer": "aura/payload-interface",
            "description": "An interface package for Domain Payload implementations."
        },
        "Router": {
            "type": "library",
            "version": "3.1.0",
            "github": "https://github.com/auraphp/Aura.Router",
            "composer": "aura/router",
            "description": "Powerful, flexible web routing for PSR-7 requests."
        },
        "Sql": {
            "type": "library",
            "version": "3.0.0",
            "github": "https://github.com/auraphp/Aura.Sql",
            "composer": "aura/sql",
            "description": "A PDO extension that provides lazy connections, array quoting, query profiling, value binding, and convenience methods for common fetch styles. Because it extends PDO, existing code that uses PDO can use this without any changes to the existing code."
        }
    },
    "2.x": {
        "Accept": {
            "type": "library",
            "version": "2.2.5",
            "github": "https://github.com/auraphp/Aura.Accept",
            "composer": "aura/accept",
            "description": "Provides content-negotiation tools using Accept* headers."
        },
        "Auth": {
            "type": "library",
            "version": "2.0.1",
            "github": "https://github.com/auraphp/Aura.Auth",
            "composer": "aura/auth",
            "description": "Provides a unified interface to authenticate a user with local or remote authentication systems."
        },
        "Autoload": {
            "type": "library",
            "version": "2.0.4",
            "github": "https://github.com/auraphp/Aura.Autoload",
            "composer": "aura/autoload",
            "description": "Provides a PSR-4 compliant autoloader implementation."
        },
        "Cli": {
            "type": "library",
            "version": "2.2.0",
            "github": "https://github.com/auraphp/Aura.Cli",
            "composer": "aura/cli",
            "description": "Provides the equivalent of request (Context) and response (Stdio) classes for a command line environment, including Getopt support."
        },
        "Cli_Kernel": {
            "type": "kernel",
            "version": "2.0.4",
            "github": "https://github.com/auraphp/Aura.Cli_Kernel",
            "composer": "aura/cli-kernel",
            "description": "The kernel files for an Aura CLI project."
        },
        "Cli_Project": {
            "type": "project",
            "version": "2.0.2",
            "github": "https://github.com/auraphp/Aura.Cli_Project",
            "composer": "aura/cli-project",
            "description": "A minimal command-line framework built from Aura v2 packages"
        },
        "Di": {
            "type": "library",
            "version": "2.2.4",
            "github": "https://github.com/auraphp/Aura.Di",
            "composer": "aura/di",
            "description": "Provides a dependency injection container system with native support for constructor- and setter-based injection, lazy-loading of services, and inheritable configuration of setters and constructor params."
        },
        "Dispatcher": {
            "type": "library",
            "version": "2.0.4",
            "github": "https://github.com/auraphp/Aura.Dispatcher",
            "composer": "aura/dispatcher",
            "description": "Creates objects from a factory and invokes methods using named parameters; also provides a trait for invoking closures and object methods with named parameters."
        },
        "Filter": {
            "type": "library",
            "version": "2.3.1",
            "github": "https://github.com/auraphp/Aura.Filter",
            "composer": "aura/filter",
            "description": "Filters to validate and sanitize objects and arrays."
        },
        "Framework_Project": {
            "type": "project",
            "version": "2.0.1",
            "github": "https://github.com/auraphp/Aura.Framework_Project",
            "composer": "aura/framework-project",
            "description": "A minimal web+cli framework built from Aura v2 packages"
        },
        "Html": {
            "type": "library",
            "version": "2.5.0",
            "github": "https://github.com/auraphp/Aura.Html",
            "composer": "aura/html",
            "description": "Provides HTML escapers and helpers, including form input helpers."
        },
        "Includer": {
            "type": "library",
            "version": "2.0.3",
            "github": "https://github.com/auraphp/Aura.Includer",
            "composer": "aura/includer",
            "description": "Include multiple files from specified directories, in order, with variables extracted into a limited include scope."
        },
        "Project_Kernel": {
            "type": "kernel",
            "version": "2.1.1",
            "github": "https://github.com/auraphp/Aura.Project_Kernel",
            "composer": "aura/project-kernel",
            "description": "The shared kernel files for an Aura project."
        },
        "Router": {
            "type": "library",
            "version": "2.3.1",
            "github": "https://github.com/auraphp/Aura.Router",
            "composer": "aura/router",
            "description": "A web router implementation; given a URI path and a copy of $_SERVER, it will extract path-info parameter values for a specific route."
        },
        "Session": {
            "type": "library",
            "version": "2.1.0",
            "github": "https://github.com/auraphp/Aura.Session",
            "composer": "aura/session",
            "description": "Provides session management functionality, including lazy session starting, session segments, next-request-only (\"flash\") values, and CSRF tools."
        },
        "Sql": {
            "type": "library",
            "version": "2.6.0",
            "github": "https://github.com/auraphp/Aura.Sql",
            "composer": "aura/sql",
            "description": "A PDO extension that provides lazy connections, array quoting, identifier quoting, query profiling, value binding, and convenience methods for common fetch styles. Because it extends PDO, existing code that uses PDO can use this without any changes to the existing code."
        },
        "SqlQuery": {
            "type": "library",
            "version": "2.7.1",
            "github": "https://github.com/auraphp/Aura.SqlQuery",
            "composer": "aura/sqlquery",
            "description": "Object-oriented query builders for MySQL, Postgres, SQLite, and SQLServer; can be used with any database connection library."
        },
        "SqlSchema": {
            "type": "library",
            "version": "2.0.3",
            "github": "https://github.com/auraphp/Aura.SqlSchema",
            "composer": "aura/sqlschema",
            "description": "Provides facilities to read table names and table columns from a database using PDO."
        },
        "View": {
            "type": "library",
            "version": "2.3.0",
            "github": "https://github.com/auraphp/Aura.View",
            "composer": "aura/view",
            "description": "Provides an implementation of the TemplateView and TwoStepView patterns, with support for helpers and for closures as templates, using PHP itself as the templating language."
        },
        "Web": {
            "type": "library",
            "version": "2.1.0",
            "github": "https://github.com/auraphp/Aura.Web",
            "composer": "aura/web",
            "description": "Provides web Request and Response objects for use by web controllers and actions. These are representations of the PHP web environment, not HTTP request and response objects proper."
        },
        "Web_Kernel": {
            "type": "kernel",
            "version": "2.1.3",
            "github": "https://github.com/auraphp/Aura.Web_Kernel",
            "composer": "aura/web-kernel",
            "description": "The kernel files for an Aura web project."
        },
        "Web_Project": {
            "type": "project",
            "version": "2.0.2",
            "github": "https://github.com/auraphp/Aura.Web_Project",
            "composer": "aura/web-project",
            "description": "A minimal web framework built from Aura v2 packages"
        }
    },
    "1.x": {
        "Autoload": {
            "type": "library",
            "version": "1.0.3",
            "github": "https://github.com/auraphp/Aura.Autoload",
            "composer": "aura/autoload",
            "description": "The Aura Autoload package provides a [PSR-0](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md) compliant SPL autoloader implementation for PHP. It also matches the proposed [SplClassLoader](https://wiki.php.net/rfc/splclassloader) interface."
        },
        "Cli": {
            "type": "library",
            "version": "1.1.2",
            "github": "https://github.com/auraphp/Aura.Cli",
            "composer": "aura/cli",
            "description": "The Aura CLI package provides a system for creating and executing CLI command objects.  It includes facilities for parsing command-line(console) options and handling standard input/output."
        },
        "Di": {
            "type": "library",
            "version": "1.1.2",
            "github": "https://github.com/auraphp/Aura.Di",
            "composer": "aura/di",
            "description": "The Aura DI package provides a dependency injection container system with native support for constructor- and setter-based injection, lazy-loading of services, and inheritable configuration of setters and constructor params."
        },
        "Filter": {
            "type": "library",
            "version": "1.1.0",
            "github": "https://github.com/auraphp/Aura.Filter",
            "composer": "aura/filter",
            "description": "The Aura Filter package provides tools to validate and sanitize data objects and arrays."
        },
        "Framework": {
            "type": "framework",
            "version": "1.0.1",
            "github": "https://github.com/auraphp/Aura.Framework",
            "composer": "aura/framework",
            "description": "The Aura Framework package, when combined with a system skeleton, provides a full-stack framework built from Aura components."
        },
        "Framework_Demo": {
            "type": "framework",
            "version": "1.0.1",
            "github": "https://github.com/auraphp/Aura.Framework_Demo",
            "composer": "aura/framework_demo",
            "description": "A \"hello world\" demo for the Aura framework and system."
        },
        "Http": {
            "type": "library",
            "version": "1.0.3",
            "github": "https://github.com/auraphp/Aura.Http",
            "composer": "aura/http",
            "description": "The Aura HTTP package provides objects to build and send HTTP requests and responses."
        },
        "Input": {
            "type": "library",
            "version": "1.2.1",
            "github": "https://github.com/auraphp/Aura.Input",
            "composer": "aura/input",
            "description": "This package contains tools to describe and filter user inputs from an HTML form, including sub-forms/sub-fieldsets, fieldset collections, an interface for injecting custom filter systems, and CSRF protection. Note that this package does not include output functionality, although the \"hints\" provided by the Form object can be used with any presentation system to generate an HTML form."
        },
        "Intl": {
            "type": "library",
            "version": "1.1.1",
            "github": "https://github.com/auraphp/Aura.Intl",
            "composer": "aura/intl",
            "description": "The Aura.Intl package provides internationalization (I18N) tools, specifically\npackage-oriented per-locale message translation."
        },
        "Marshal": {
            "type": "library",
            "version": "1.2.2",
            "github": "https://github.com/auraphp/Aura.Marshal",
            "composer": "aura/marshal",
            "description": "The Aura Marshal package is a data-object marshalling tool; it takes results from data sources and marshals those result sets into domain model objects of your own design, preserving data relationships along the way."
        },
        "Router": {
            "type": "library",
            "version": "1.2.0",
            "github": "https://github.com/auraphp/Aura.Router",
            "composer": "aura/router",
            "description": "The Aura Router package implements web routing; given a URI path and a copy of $_SERVER, it will extract controller, action, and parameter values for a specific route."
        },
        "Session": {
            "type": "library",
            "version": "1.0.2",
            "github": "https://github.com/auraphp/Aura.Session",
            "composer": "aura/session",
            "description": "The Aura Session provides session management functionality, including session\nsegments, read-once (\"flash\") values, CSRF tools, and lazy session starting."
        },
        "Signal": {
            "type": "library",
            "version": "1.0.4",
            "github": "https://github.com/auraphp/Aura.Signal",
            "composer": "aura/signal",
            "description": "A SignalSlots/EventHandler implementation for PHP; with it, we can invoke handlers (\"slots\" or \"hooks\") whenever an object sends a signal (\"notification\" or \"event\") to the signal manager."
        },
        "Sql": {
            "type": "library",
            "version": "1.3.1",
            "github": "https://github.com/auraphp/Aura.Sql",
            "composer": "aura/sql",
            "description": "The Aura Sql package is a wrapper around PDO that provides connection adapters and convenience methods for MySQL, PostgreSQL, SQLite, and SQL Server."
        },
        "Uri": {
            "type": "library",
            "version": "1.2.0",
            "github": "https://github.com/auraphp/Aura.Uri",
            "composer": "aura/uri",
            "description": "The Aura Uri package provides tools to build and manipulate URL strings."
        },
        "View": {
            "type": "library",
            "version": "1.2.2",
            "github": "https://github.com/auraphp/Aura.View",
            "composer": "aura/view",
            "description": "The Aura View package provides an implementation of the TemplateView and TwoStepView patterns, with support for helpers and path stacks, using PHP itself as the templating language."
        },
        "Web": {
            "type": "library",
            "version": "1.0.3",
            "github": "https://github.com/auraphp/Aura.Web",
            "composer": "aura/web",
            "description": "The Aura Web package provides tools to build web page controllers, including an AbstractPage for action methods, a Context class for disovering the request environment, and a Response transfer object that describes the eventual HTTP response."
        }
    }
}
